{"ast":null,"code":"(function(){var dbits;var canary=0xdeadbeefcafe;var j_lm=(canary&0xffffff)==0xefcafe;function BigInteger(a,b,c){if(a!=null)if(\"number\"==typeof a)this.fromNumber(a,b,c);else if(b==null&&\"string\"!=typeof a)this.fromString(a,256);else this.fromString(a,b);}function nbi(){return new BigInteger(null);}function am1(i,x,w,j,c,n){while(--n>=0){var v=x*this[i++]+w[j]+c;c=Math.floor(v/0x4000000);w[j++]=v&0x3ffffff;}return c;}function am2(i,x,w,j,c,n){var xl=x&0x7fff,xh=x>>15;while(--n>=0){var l=this[i]&0x7fff;var h=this[i++]>>15;var m=xh*l+h*xl;l=xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);c=(l>>>30)+(m>>>15)+xh*h+(c>>>30);w[j++]=l&0x3fffffff;}return c;}function am3(i,x,w,j,c,n){var xl=x&0x3fff,xh=x>>14;while(--n>=0){var l=this[i]&0x3fff;var h=this[i++]>>14;var m=xh*l+h*xl;l=xl*l+((m&0x3fff)<<14)+w[j]+c;c=(l>>28)+(m>>14)+xh*h;w[j++]=l&0xfffffff;}return c;}var inBrowser=typeof navigator!==\"undefined\";if(inBrowser&&j_lm&&navigator.appName==\"Microsoft Internet Explorer\"){BigInteger.prototype.am=am2;dbits=30;}else if(inBrowser&&j_lm&&navigator.appName!=\"Netscape\"){BigInteger.prototype.am=am1;dbits=26;}else{BigInteger.prototype.am=am3;dbits=28;}BigInteger.prototype.DB=dbits;BigInteger.prototype.DM=(1<<dbits)-1;BigInteger.prototype.DV=1<<dbits;var BI_FP=52;BigInteger.prototype.FV=Math.pow(2,BI_FP);BigInteger.prototype.F1=BI_FP-dbits;BigInteger.prototype.F2=2*dbits-BI_FP;var BI_RM=\"0123456789abcdefghijklmnopqrstuvwxyz\";var BI_RC=new Array();var rr,vv;rr=\"0\".charCodeAt(0);for(vv=0;vv<=9;++vv){BI_RC[rr++]=vv;}rr=\"a\".charCodeAt(0);for(vv=10;vv<36;++vv){BI_RC[rr++]=vv;}rr=\"A\".charCodeAt(0);for(vv=10;vv<36;++vv){BI_RC[rr++]=vv;}function int2char(n){return BI_RM.charAt(n);}function intAt(s,i){var c=BI_RC[s.charCodeAt(i)];return c==null?-1:c;}function bnpCopyTo(r){for(var i=this.t-1;i>=0;--i){r[i]=this[i];}r.t=this.t;r.s=this.s;}function bnpFromInt(x){this.t=1;this.s=x<0?-1:0;if(x>0)this[0]=x;else if(x<-1)this[0]=x+this.DV;else this.t=0;}function nbv(i){var r=nbi();r.fromInt(i);return r;}function bnpFromString(s,b){var k;if(b==16)k=4;else if(b==8)k=3;else if(b==256)k=8;else if(b==2)k=1;else if(b==32)k=5;else if(b==4)k=2;else{this.fromRadix(s,b);return;}this.t=0;this.s=0;var i=s.length,mi=false,sh=0;while(--i>=0){var x=k==8?s[i]&0xff:intAt(s,i);if(x<0){if(s.charAt(i)==\"-\")mi=true;continue;}mi=false;if(sh==0)this[this.t++]=x;else if(sh+k>this.DB){this[this.t-1]|=(x&(1<<this.DB-sh)-1)<<sh;this[this.t++]=x>>this.DB-sh;}else this[this.t-1]|=x<<sh;sh+=k;if(sh>=this.DB)sh-=this.DB;}if(k==8&&(s[0]&0x80)!=0){this.s=-1;if(sh>0)this[this.t-1]|=(1<<this.DB-sh)-1<<sh;}this.clamp();if(mi)BigInteger.ZERO.subTo(this,this);}function bnpClamp(){var c=this.s&this.DM;while(this.t>0&&this[this.t-1]==c){--this.t;}}function bnToString(b){if(this.s<0)return\"-\"+this.negate().toString(b);var k;if(b==16)k=4;else if(b==8)k=3;else if(b==2)k=1;else if(b==32)k=5;else if(b==4)k=2;else return this.toRadix(b);var km=(1<<k)-1,d,m=false,r=\"\",i=this.t;var p=this.DB-i*this.DB%k;if(i-->0){if(p<this.DB&&(d=this[i]>>p)>0){m=true;r=int2char(d);}while(i>=0){if(p<k){d=(this[i]&(1<<p)-1)<<k-p;d|=this[--i]>>(p+=this.DB-k);}else{d=this[i]>>(p-=k)&km;if(p<=0){p+=this.DB;--i;}}if(d>0)m=true;if(m)r+=int2char(d);}}return m?r:\"0\";}function bnNegate(){var r=nbi();BigInteger.ZERO.subTo(this,r);return r;}function bnAbs(){return this.s<0?this.negate():this;}function bnCompareTo(a){var r=this.s-a.s;if(r!=0)return r;var i=this.t;r=i-a.t;if(r!=0)return this.s<0?-r:r;while(--i>=0){if((r=this[i]-a[i])!=0)return r;}return 0;}function nbits(x){var r=1,t;if((t=x>>>16)!=0){x=t;r+=16;}if((t=x>>8)!=0){x=t;r+=8;}if((t=x>>4)!=0){x=t;r+=4;}if((t=x>>2)!=0){x=t;r+=2;}if((t=x>>1)!=0){x=t;r+=1;}return r;}function bnBitLength(){if(this.t<=0)return 0;return this.DB*(this.t-1)+nbits(this[this.t-1]^this.s&this.DM);}function bnpDLShiftTo(n,r){var i;for(i=this.t-1;i>=0;--i){r[i+n]=this[i];}for(i=n-1;i>=0;--i){r[i]=0;}r.t=this.t+n;r.s=this.s;}function bnpDRShiftTo(n,r){for(var i=n;i<this.t;++i){r[i-n]=this[i];}r.t=Math.max(this.t-n,0);r.s=this.s;}function bnpLShiftTo(n,r){var bs=n%this.DB;var cbs=this.DB-bs;var bm=(1<<cbs)-1;var ds=Math.floor(n/this.DB),c=this.s<<bs&this.DM,i;for(i=this.t-1;i>=0;--i){r[i+ds+1]=this[i]>>cbs|c;c=(this[i]&bm)<<bs;}for(i=ds-1;i>=0;--i){r[i]=0;}r[ds]=c;r.t=this.t+ds+1;r.s=this.s;r.clamp();}function bnpRShiftTo(n,r){r.s=this.s;var ds=Math.floor(n/this.DB);if(ds>=this.t){r.t=0;return;}var bs=n%this.DB;var cbs=this.DB-bs;var bm=(1<<bs)-1;r[0]=this[ds]>>bs;for(var i=ds+1;i<this.t;++i){r[i-ds-1]|=(this[i]&bm)<<cbs;r[i-ds]=this[i]>>bs;}if(bs>0)r[this.t-ds-1]|=(this.s&bm)<<cbs;r.t=this.t-ds;r.clamp();}function bnpSubTo(a,r){var i=0,c=0,m=Math.min(a.t,this.t);while(i<m){c+=this[i]-a[i];r[i++]=c&this.DM;c>>=this.DB;}if(a.t<this.t){c-=a.s;while(i<this.t){c+=this[i];r[i++]=c&this.DM;c>>=this.DB;}c+=this.s;}else{c+=this.s;while(i<a.t){c-=a[i];r[i++]=c&this.DM;c>>=this.DB;}c-=a.s;}r.s=c<0?-1:0;if(c<-1)r[i++]=this.DV+c;else if(c>0)r[i++]=c;r.t=i;r.clamp();}function bnpMultiplyTo(a,r){var x=this.abs(),y=a.abs();var i=x.t;r.t=i+y.t;while(--i>=0){r[i]=0;}for(i=0;i<y.t;++i){r[i+x.t]=x.am(0,y[i],r,i,0,x.t);}r.s=0;r.clamp();if(this.s!=a.s)BigInteger.ZERO.subTo(r,r);}function bnpSquareTo(r){var x=this.abs();var i=r.t=2*x.t;while(--i>=0){r[i]=0;}for(i=0;i<x.t-1;++i){var c=x.am(i,x[i],r,2*i,0,1);if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1))>=x.DV){r[i+x.t]-=x.DV;r[i+x.t+1]=1;}}if(r.t>0)r[r.t-1]+=x.am(i,x[i],r,2*i,0,1);r.s=0;r.clamp();}function bnpDivRemTo(m,q,r){var pm=m.abs();if(pm.t<=0)return;var pt=this.abs();if(pt.t<pm.t){if(q!=null)q.fromInt(0);if(r!=null)this.copyTo(r);return;}if(r==null)r=nbi();var y=nbi(),ts=this.s,ms=m.s;var nsh=this.DB-nbits(pm[pm.t-1]);if(nsh>0){pm.lShiftTo(nsh,y);pt.lShiftTo(nsh,r);}else{pm.copyTo(y);pt.copyTo(r);}var ys=y.t;var y0=y[ys-1];if(y0==0)return;var yt=y0*(1<<this.F1)+(ys>1?y[ys-2]>>this.F2:0);var d1=this.FV/yt,d2=(1<<this.F1)/yt,e=1<<this.F2;var i=r.t,j=i-ys,t=q==null?nbi():q;y.dlShiftTo(j,t);if(r.compareTo(t)>=0){r[r.t++]=1;r.subTo(t,r);}BigInteger.ONE.dlShiftTo(ys,t);t.subTo(y,y);while(y.t<ys){y[y.t++]=0;}while(--j>=0){var qd=r[--i]==y0?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);if((r[i]+=y.am(0,qd,r,j,0,ys))<qd){y.dlShiftTo(j,t);r.subTo(t,r);while(r[i]<--qd){r.subTo(t,r);}}}if(q!=null){r.drShiftTo(ys,q);if(ts!=ms)BigInteger.ZERO.subTo(q,q);}r.t=ys;r.clamp();if(nsh>0)r.rShiftTo(nsh,r);if(ts<0)BigInteger.ZERO.subTo(r,r);}function bnMod(a){var r=nbi();this.abs().divRemTo(a,null,r);if(this.s<0&&r.compareTo(BigInteger.ZERO)>0)a.subTo(r,r);return r;}function Classic(m){this.m=m;}function cConvert(x){if(x.s<0||x.compareTo(this.m)>=0)return x.mod(this.m);else return x;}function cRevert(x){return x;}function cReduce(x){x.divRemTo(this.m,null,x);}function cMulTo(x,y,r){x.multiplyTo(y,r);this.reduce(r);}function cSqrTo(x,r){x.squareTo(r);this.reduce(r);}Classic.prototype.convert=cConvert;Classic.prototype.revert=cRevert;Classic.prototype.reduce=cReduce;Classic.prototype.mulTo=cMulTo;Classic.prototype.sqrTo=cSqrTo;function bnpInvDigit(){if(this.t<1)return 0;var x=this[0];if((x&1)==0)return 0;var y=x&3;y=y*(2-(x&0xf)*y)&0xf;y=y*(2-(x&0xff)*y)&0xff;y=y*(2-((x&0xffff)*y&0xffff))&0xffff;y=y*(2-x*y%this.DV)%this.DV;return y>0?this.DV-y:-y;}function Montgomery(m){this.m=m;this.mp=m.invDigit();this.mpl=this.mp&0x7fff;this.mph=this.mp>>15;this.um=(1<<m.DB-15)-1;this.mt2=2*m.t;}function montConvert(x){var r=nbi();x.abs().dlShiftTo(this.m.t,r);r.divRemTo(this.m,null,r);if(x.s<0&&r.compareTo(BigInteger.ZERO)>0)this.m.subTo(r,r);return r;}function montRevert(x){var r=nbi();x.copyTo(r);this.reduce(r);return r;}function montReduce(x){while(x.t<=this.mt2){x[x.t++]=0;}for(var i=0;i<this.m.t;++i){var j=x[i]&0x7fff;var u0=j*this.mpl+((j*this.mph+(x[i]>>15)*this.mpl&this.um)<<15)&x.DM;j=i+this.m.t;x[j]+=this.m.am(0,u0,x,i,0,this.m.t);while(x[j]>=x.DV){x[j]-=x.DV;x[++j]++;}}x.clamp();x.drShiftTo(this.m.t,x);if(x.compareTo(this.m)>=0)x.subTo(this.m,x);}function montSqrTo(x,r){x.squareTo(r);this.reduce(r);}function montMulTo(x,y,r){x.multiplyTo(y,r);this.reduce(r);}Montgomery.prototype.convert=montConvert;Montgomery.prototype.revert=montRevert;Montgomery.prototype.reduce=montReduce;Montgomery.prototype.mulTo=montMulTo;Montgomery.prototype.sqrTo=montSqrTo;function bnpIsEven(){return(this.t>0?this[0]&1:this.s)==0;}function bnpExp(e,z){if(e>0xffffffff||e<1)return BigInteger.ONE;var r=nbi(),r2=nbi(),g=z.convert(this),i=nbits(e)-1;g.copyTo(r);while(--i>=0){z.sqrTo(r,r2);if((e&1<<i)>0)z.mulTo(r2,g,r);else{var t=r;r=r2;r2=t;}}return z.revert(r);}function bnModPowInt(e,m){var z;if(e<256||m.isEven())z=new Classic(m);else z=new Montgomery(m);return this.exp(e,z);}BigInteger.prototype.copyTo=bnpCopyTo;BigInteger.prototype.fromInt=bnpFromInt;BigInteger.prototype.fromString=bnpFromString;BigInteger.prototype.clamp=bnpClamp;BigInteger.prototype.dlShiftTo=bnpDLShiftTo;BigInteger.prototype.drShiftTo=bnpDRShiftTo;BigInteger.prototype.lShiftTo=bnpLShiftTo;BigInteger.prototype.rShiftTo=bnpRShiftTo;BigInteger.prototype.subTo=bnpSubTo;BigInteger.prototype.multiplyTo=bnpMultiplyTo;BigInteger.prototype.squareTo=bnpSquareTo;BigInteger.prototype.divRemTo=bnpDivRemTo;BigInteger.prototype.invDigit=bnpInvDigit;BigInteger.prototype.isEven=bnpIsEven;BigInteger.prototype.exp=bnpExp;BigInteger.prototype.toString=bnToString;BigInteger.prototype.negate=bnNegate;BigInteger.prototype.abs=bnAbs;BigInteger.prototype.compareTo=bnCompareTo;BigInteger.prototype.bitLength=bnBitLength;BigInteger.prototype.mod=bnMod;BigInteger.prototype.modPowInt=bnModPowInt;BigInteger.ZERO=nbv(0);BigInteger.ONE=nbv(1);function bnClone(){var r=nbi();this.copyTo(r);return r;}function bnIntValue(){if(this.s<0){if(this.t==1)return this[0]-this.DV;else if(this.t==0)return-1;}else if(this.t==1)return this[0];else if(this.t==0)return 0;return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0];}function bnByteValue(){return this.t==0?this.s:this[0]<<24>>24;}function bnShortValue(){return this.t==0?this.s:this[0]<<16>>16;}function bnpChunkSize(r){return Math.floor(Math.LN2*this.DB/Math.log(r));}function bnSigNum(){if(this.s<0)return-1;else if(this.t<=0||this.t==1&&this[0]<=0)return 0;else return 1;}function bnpToRadix(b){if(b==null)b=10;if(this.signum()==0||b<2||b>36)return\"0\";var cs=this.chunkSize(b);var a=Math.pow(b,cs);var d=nbv(a),y=nbi(),z=nbi(),r=\"\";this.divRemTo(d,y,z);while(y.signum()>0){r=(a+z.intValue()).toString(b).substr(1)+r;y.divRemTo(d,y,z);}return z.intValue().toString(b)+r;}function bnpFromRadix(s,b){this.fromInt(0);if(b==null)b=10;var cs=this.chunkSize(b);var d=Math.pow(b,cs),mi=false,j=0,w=0;for(var i=0;i<s.length;++i){var x=intAt(s,i);if(x<0){if(s.charAt(i)==\"-\"&&this.signum()==0)mi=true;continue;}w=b*w+x;if(++j>=cs){this.dMultiply(d);this.dAddOffset(w,0);j=0;w=0;}}if(j>0){this.dMultiply(Math.pow(b,j));this.dAddOffset(w,0);}if(mi)BigInteger.ZERO.subTo(this,this);}function bnpFromNumber(a,b,c){if(\"number\"==typeof b){if(a<2)this.fromInt(1);else{this.fromNumber(a,c);if(!this.testBit(a-1))this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);if(this.isEven())this.dAddOffset(1,0);while(!this.isProbablePrime(b)){this.dAddOffset(2,0);if(this.bitLength()>a)this.subTo(BigInteger.ONE.shiftLeft(a-1),this);}}}else{var x=new Array(),t=a&7;x.length=(a>>3)+1;b.nextBytes(x);if(t>0)x[0]&=(1<<t)-1;else x[0]=0;this.fromString(x,256);}}function bnToByteArray(){var i=this.t,r=new Array();r[0]=this.s;var p=this.DB-i*this.DB%8,d,k=0;if(i-->0){if(p<this.DB&&(d=this[i]>>p)!=(this.s&this.DM)>>p)r[k++]=d|this.s<<this.DB-p;while(i>=0){if(p<8){d=(this[i]&(1<<p)-1)<<8-p;d|=this[--i]>>(p+=this.DB-8);}else{d=this[i]>>(p-=8)&0xff;if(p<=0){p+=this.DB;--i;}}if((d&0x80)!=0)d|=-256;if(k==0&&(this.s&0x80)!=(d&0x80))++k;if(k>0||d!=this.s)r[k++]=d;}}return r;}function bnEquals(a){return this.compareTo(a)==0;}function bnMin(a){return this.compareTo(a)<0?this:a;}function bnMax(a){return this.compareTo(a)>0?this:a;}function bnpBitwiseTo(a,op,r){var i,f,m=Math.min(a.t,this.t);for(i=0;i<m;++i){r[i]=op(this[i],a[i]);}if(a.t<this.t){f=a.s&this.DM;for(i=m;i<this.t;++i){r[i]=op(this[i],f);}r.t=this.t;}else{f=this.s&this.DM;for(i=m;i<a.t;++i){r[i]=op(f,a[i]);}r.t=a.t;}r.s=op(this.s,a.s);r.clamp();}function op_and(x,y){return x&y;}function bnAnd(a){var r=nbi();this.bitwiseTo(a,op_and,r);return r;}function op_or(x,y){return x|y;}function bnOr(a){var r=nbi();this.bitwiseTo(a,op_or,r);return r;}function op_xor(x,y){return x^y;}function bnXor(a){var r=nbi();this.bitwiseTo(a,op_xor,r);return r;}function op_andnot(x,y){return x&~y;}function bnAndNot(a){var r=nbi();this.bitwiseTo(a,op_andnot,r);return r;}function bnNot(){var r=nbi();for(var i=0;i<this.t;++i){r[i]=this.DM&~this[i];}r.t=this.t;r.s=~this.s;return r;}function bnShiftLeft(n){var r=nbi();if(n<0)this.rShiftTo(-n,r);else this.lShiftTo(n,r);return r;}function bnShiftRight(n){var r=nbi();if(n<0)this.lShiftTo(-n,r);else this.rShiftTo(n,r);return r;}function lbit(x){if(x==0)return-1;var r=0;if((x&0xffff)==0){x>>=16;r+=16;}if((x&0xff)==0){x>>=8;r+=8;}if((x&0xf)==0){x>>=4;r+=4;}if((x&3)==0){x>>=2;r+=2;}if((x&1)==0)++r;return r;}function bnGetLowestSetBit(){for(var i=0;i<this.t;++i){if(this[i]!=0)return i*this.DB+lbit(this[i]);}if(this.s<0)return this.t*this.DB;return-1;}function cbit(x){var r=0;while(x!=0){x&=x-1;++r;}return r;}function bnBitCount(){var r=0,x=this.s&this.DM;for(var i=0;i<this.t;++i){r+=cbit(this[i]^x);}return r;}function bnTestBit(n){var j=Math.floor(n/this.DB);if(j>=this.t)return this.s!=0;return(this[j]&1<<n%this.DB)!=0;}function bnpChangeBit(n,op){var r=BigInteger.ONE.shiftLeft(n);this.bitwiseTo(r,op,r);return r;}function bnSetBit(n){return this.changeBit(n,op_or);}function bnClearBit(n){return this.changeBit(n,op_andnot);}function bnFlipBit(n){return this.changeBit(n,op_xor);}function bnpAddTo(a,r){var i=0,c=0,m=Math.min(a.t,this.t);while(i<m){c+=this[i]+a[i];r[i++]=c&this.DM;c>>=this.DB;}if(a.t<this.t){c+=a.s;while(i<this.t){c+=this[i];r[i++]=c&this.DM;c>>=this.DB;}c+=this.s;}else{c+=this.s;while(i<a.t){c+=a[i];r[i++]=c&this.DM;c>>=this.DB;}c+=a.s;}r.s=c<0?-1:0;if(c>0)r[i++]=c;else if(c<-1)r[i++]=this.DV+c;r.t=i;r.clamp();}function bnAdd(a){var r=nbi();this.addTo(a,r);return r;}function bnSubtract(a){var r=nbi();this.subTo(a,r);return r;}function bnMultiply(a){var r=nbi();this.multiplyTo(a,r);return r;}function bnSquare(){var r=nbi();this.squareTo(r);return r;}function bnDivide(a){var r=nbi();this.divRemTo(a,r,null);return r;}function bnRemainder(a){var r=nbi();this.divRemTo(a,null,r);return r;}function bnDivideAndRemainder(a){var q=nbi(),r=nbi();this.divRemTo(a,q,r);return new Array(q,r);}function bnpDMultiply(n){this[this.t]=this.am(0,n-1,this,0,0,this.t);++this.t;this.clamp();}function bnpDAddOffset(n,w){if(n==0)return;while(this.t<=w){this[this.t++]=0;}this[w]+=n;while(this[w]>=this.DV){this[w]-=this.DV;if(++w>=this.t)this[this.t++]=0;++this[w];}}function NullExp(){}function nNop(x){return x;}function nMulTo(x,y,r){x.multiplyTo(y,r);}function nSqrTo(x,r){x.squareTo(r);}NullExp.prototype.convert=nNop;NullExp.prototype.revert=nNop;NullExp.prototype.mulTo=nMulTo;NullExp.prototype.sqrTo=nSqrTo;function bnPow(e){return this.exp(e,new NullExp());}function bnpMultiplyLowerTo(a,n,r){var i=Math.min(this.t+a.t,n);r.s=0;r.t=i;while(i>0){r[--i]=0;}var j;for(j=r.t-this.t;i<j;++i){r[i+this.t]=this.am(0,a[i],r,i,0,this.t);}for(j=Math.min(a.t,n);i<j;++i){this.am(0,a[i],r,i,0,n-i);}r.clamp();}function bnpMultiplyUpperTo(a,n,r){--n;var i=r.t=this.t+a.t-n;r.s=0;while(--i>=0){r[i]=0;}for(i=Math.max(n-this.t,0);i<a.t;++i){r[this.t+i-n]=this.am(n-i,a[i],r,0,0,this.t+i-n);}r.clamp();r.drShiftTo(1,r);}function Barrett(m){this.r2=nbi();this.q3=nbi();BigInteger.ONE.dlShiftTo(2*m.t,this.r2);this.mu=this.r2.divide(m);this.m=m;}function barrettConvert(x){if(x.s<0||x.t>2*this.m.t)return x.mod(this.m);else if(x.compareTo(this.m)<0)return x;else{var r=nbi();x.copyTo(r);this.reduce(r);return r;}}function barrettRevert(x){return x;}function barrettReduce(x){x.drShiftTo(this.m.t-1,this.r2);if(x.t>this.m.t+1){x.t=this.m.t+1;x.clamp();}this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);while(x.compareTo(this.r2)<0){x.dAddOffset(1,this.m.t+1);}x.subTo(this.r2,x);while(x.compareTo(this.m)>=0){x.subTo(this.m,x);}}function barrettSqrTo(x,r){x.squareTo(r);this.reduce(r);}function barrettMulTo(x,y,r){x.multiplyTo(y,r);this.reduce(r);}Barrett.prototype.convert=barrettConvert;Barrett.prototype.revert=barrettRevert;Barrett.prototype.reduce=barrettReduce;Barrett.prototype.mulTo=barrettMulTo;Barrett.prototype.sqrTo=barrettSqrTo;function bnModPow(e,m){var i=e.bitLength(),k,r=nbv(1),z;if(i<=0)return r;else if(i<18)k=1;else if(i<48)k=3;else if(i<144)k=4;else if(i<768)k=5;else k=6;if(i<8)z=new Classic(m);else if(m.isEven())z=new Barrett(m);else z=new Montgomery(m);var g=new Array(),n=3,k1=k-1,km=(1<<k)-1;g[1]=z.convert(this);if(k>1){var g2=nbi();z.sqrTo(g[1],g2);while(n<=km){g[n]=nbi();z.mulTo(g2,g[n-2],g[n]);n+=2;}}var j=e.t-1,w,is1=true,r2=nbi(),t;i=nbits(e[j])-1;while(j>=0){if(i>=k1)w=e[j]>>i-k1&km;else{w=(e[j]&(1<<i+1)-1)<<k1-i;if(j>0)w|=e[j-1]>>this.DB+i-k1;}n=k;while((w&1)==0){w>>=1;--n;}if((i-=n)<0){i+=this.DB;--j;}if(is1){g[w].copyTo(r);is1=false;}else{while(n>1){z.sqrTo(r,r2);z.sqrTo(r2,r);n-=2;}if(n>0)z.sqrTo(r,r2);else{t=r;r=r2;r2=t;}z.mulTo(r2,g[w],r);}while(j>=0&&(e[j]&1<<i)==0){z.sqrTo(r,r2);t=r;r=r2;r2=t;if(--i<0){i=this.DB-1;--j;}}}return z.revert(r);}function bnGCD(a){var x=this.s<0?this.negate():this.clone();var y=a.s<0?a.negate():a.clone();if(x.compareTo(y)<0){var t=x;x=y;y=t;}var i=x.getLowestSetBit(),g=y.getLowestSetBit();if(g<0)return x;if(i<g)g=i;if(g>0){x.rShiftTo(g,x);y.rShiftTo(g,y);}while(x.signum()>0){if((i=x.getLowestSetBit())>0)x.rShiftTo(i,x);if((i=y.getLowestSetBit())>0)y.rShiftTo(i,y);if(x.compareTo(y)>=0){x.subTo(y,x);x.rShiftTo(1,x);}else{y.subTo(x,y);y.rShiftTo(1,y);}}if(g>0)y.lShiftTo(g,y);return y;}function bnpModInt(n){if(n<=0)return 0;var d=this.DV%n,r=this.s<0?n-1:0;if(this.t>0)if(d==0)r=this[0]%n;else for(var i=this.t-1;i>=0;--i){r=(d*r+this[i])%n;}return r;}function bnModInverse(m){var ac=m.isEven();if(this.isEven()&&ac||m.signum()==0)return BigInteger.ZERO;var u=m.clone(),v=this.clone();var a=nbv(1),b=nbv(0),c=nbv(0),d=nbv(1);while(u.signum()!=0){while(u.isEven()){u.rShiftTo(1,u);if(ac){if(!a.isEven()||!b.isEven()){a.addTo(this,a);b.subTo(m,b);}a.rShiftTo(1,a);}else if(!b.isEven())b.subTo(m,b);b.rShiftTo(1,b);}while(v.isEven()){v.rShiftTo(1,v);if(ac){if(!c.isEven()||!d.isEven()){c.addTo(this,c);d.subTo(m,d);}c.rShiftTo(1,c);}else if(!d.isEven())d.subTo(m,d);d.rShiftTo(1,d);}if(u.compareTo(v)>=0){u.subTo(v,u);if(ac)a.subTo(c,a);b.subTo(d,b);}else{v.subTo(u,v);if(ac)c.subTo(a,c);d.subTo(b,d);}}if(v.compareTo(BigInteger.ONE)!=0)return BigInteger.ZERO;if(d.compareTo(m)>=0)return d.subtract(m);if(d.signum()<0)d.addTo(m,d);else return d;if(d.signum()<0)return d.add(m);else return d;}var lowprimes=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];var lplim=(1<<26)/lowprimes[lowprimes.length-1];function bnIsProbablePrime(t){var i,x=this.abs();if(x.t==1&&x[0]<=lowprimes[lowprimes.length-1]){for(i=0;i<lowprimes.length;++i){if(x[0]==lowprimes[i])return true;}return false;}if(x.isEven())return false;i=1;while(i<lowprimes.length){var m=lowprimes[i],j=i+1;while(j<lowprimes.length&&m<lplim){m*=lowprimes[j++];}m=x.modInt(m);while(i<j){if(m%lowprimes[i++]==0)return false;}}return x.millerRabin(t);}function bnpMillerRabin(t){var n1=this.subtract(BigInteger.ONE);var k=n1.getLowestSetBit();if(k<=0)return false;var r=n1.shiftRight(k);t=t+1>>1;if(t>lowprimes.length)t=lowprimes.length;var a=nbi();for(var i=0;i<t;++i){a.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);var y=a.modPow(r,this);if(y.compareTo(BigInteger.ONE)!=0&&y.compareTo(n1)!=0){var j=1;while(j++<k&&y.compareTo(n1)!=0){y=y.modPowInt(2,this);if(y.compareTo(BigInteger.ONE)==0)return false;}if(y.compareTo(n1)!=0)return false;}}return true;}BigInteger.prototype.chunkSize=bnpChunkSize;BigInteger.prototype.toRadix=bnpToRadix;BigInteger.prototype.fromRadix=bnpFromRadix;BigInteger.prototype.fromNumber=bnpFromNumber;BigInteger.prototype.bitwiseTo=bnpBitwiseTo;BigInteger.prototype.changeBit=bnpChangeBit;BigInteger.prototype.addTo=bnpAddTo;BigInteger.prototype.dMultiply=bnpDMultiply;BigInteger.prototype.dAddOffset=bnpDAddOffset;BigInteger.prototype.multiplyLowerTo=bnpMultiplyLowerTo;BigInteger.prototype.multiplyUpperTo=bnpMultiplyUpperTo;BigInteger.prototype.modInt=bnpModInt;BigInteger.prototype.millerRabin=bnpMillerRabin;BigInteger.prototype.clone=bnClone;BigInteger.prototype.intValue=bnIntValue;BigInteger.prototype.byteValue=bnByteValue;BigInteger.prototype.shortValue=bnShortValue;BigInteger.prototype.signum=bnSigNum;BigInteger.prototype.toByteArray=bnToByteArray;BigInteger.prototype.equals=bnEquals;BigInteger.prototype.min=bnMin;BigInteger.prototype.max=bnMax;BigInteger.prototype.and=bnAnd;BigInteger.prototype.or=bnOr;BigInteger.prototype.xor=bnXor;BigInteger.prototype.andNot=bnAndNot;BigInteger.prototype.not=bnNot;BigInteger.prototype.shiftLeft=bnShiftLeft;BigInteger.prototype.shiftRight=bnShiftRight;BigInteger.prototype.getLowestSetBit=bnGetLowestSetBit;BigInteger.prototype.bitCount=bnBitCount;BigInteger.prototype.testBit=bnTestBit;BigInteger.prototype.setBit=bnSetBit;BigInteger.prototype.clearBit=bnClearBit;BigInteger.prototype.flipBit=bnFlipBit;BigInteger.prototype.add=bnAdd;BigInteger.prototype.subtract=bnSubtract;BigInteger.prototype.multiply=bnMultiply;BigInteger.prototype.divide=bnDivide;BigInteger.prototype.remainder=bnRemainder;BigInteger.prototype.divideAndRemainder=bnDivideAndRemainder;BigInteger.prototype.modPow=bnModPow;BigInteger.prototype.modInverse=bnModInverse;BigInteger.prototype.pow=bnPow;BigInteger.prototype.gcd=bnGCD;BigInteger.prototype.isProbablePrime=bnIsProbablePrime;BigInteger.prototype.square=bnSquare;BigInteger.prototype.Barrett=Barrett;var rng_state;var rng_pool;var rng_pptr;function rng_seed_int(x){rng_pool[rng_pptr++]^=x&255;rng_pool[rng_pptr++]^=x>>8&255;rng_pool[rng_pptr++]^=x>>16&255;rng_pool[rng_pptr++]^=x>>24&255;if(rng_pptr>=rng_psize)rng_pptr-=rng_psize;}function rng_seed_time(){rng_seed_int(new Date().getTime());}if(rng_pool==null){rng_pool=new Array();rng_pptr=0;var t;if(typeof window!==\"undefined\"&&window.crypto){if(window.crypto.getRandomValues){var ua=new Uint8Array(32);window.crypto.getRandomValues(ua);for(t=0;t<32;++t){rng_pool[rng_pptr++]=ua[t];}}else if(navigator.appName==\"Netscape\"&&navigator.appVersion<\"5\"){var z=window.crypto.random(32);for(t=0;t<z.length;++t){rng_pool[rng_pptr++]=z.charCodeAt(t)&255;}}}while(rng_pptr<rng_psize){t=Math.floor(65536*Math.random());rng_pool[rng_pptr++]=t>>>8;rng_pool[rng_pptr++]=t&255;}rng_pptr=0;rng_seed_time();}function rng_get_byte(){if(rng_state==null){rng_seed_time();rng_state=prng_newstate();rng_state.init(rng_pool);for(rng_pptr=0;rng_pptr<rng_pool.length;++rng_pptr){rng_pool[rng_pptr]=0;}rng_pptr=0;}return rng_state.next();}function rng_get_bytes(ba){var i;for(i=0;i<ba.length;++i){ba[i]=rng_get_byte();}}function SecureRandom(){}SecureRandom.prototype.nextBytes=rng_get_bytes;function Arcfour(){this.i=0;this.j=0;this.S=new Array();}function ARC4init(key){var i,j,t;for(i=0;i<256;++i){this.S[i]=i;}j=0;for(i=0;i<256;++i){j=j+this.S[i]+key[i%key.length]&255;t=this.S[i];this.S[i]=this.S[j];this.S[j]=t;}this.i=0;this.j=0;}function ARC4next(){var t;this.i=this.i+1&255;this.j=this.j+this.S[this.i]&255;t=this.S[this.i];this.S[this.i]=this.S[this.j];this.S[this.j]=t;return this.S[t+this.S[this.i]&255];}Arcfour.prototype.init=ARC4init;Arcfour.prototype.next=ARC4next;function prng_newstate(){return new Arcfour();}var rng_psize=256;if(typeof exports!=='undefined'){exports=module.exports={default:BigInteger,BigInteger:BigInteger,SecureRandom:SecureRandom};}else{this.jsbn={BigInteger:BigInteger,SecureRandom:SecureRandom};}}).call(this);","map":{"version":3,"sources":["/Users/diannamcallister/Desktop/spotstitch/frontend/node_modules/react-native-auth0/node_modules/jsbn/index.js"],"names":["dbits","canary","j_lm","BigInteger","a","b","c","fromNumber","fromString","nbi","am1","i","x","w","j","n","v","Math","floor","am2","xl","xh","l","h","m","am3","inBrowser","navigator","appName","prototype","am","DB","DM","DV","BI_FP","FV","pow","F1","F2","BI_RM","BI_RC","Array","rr","vv","charCodeAt","int2char","charAt","intAt","s","bnpCopyTo","r","t","bnpFromInt","nbv","fromInt","bnpFromString","k","fromRadix","length","mi","sh","clamp","ZERO","subTo","bnpClamp","bnToString","negate","toString","toRadix","km","d","p","bnNegate","bnAbs","bnCompareTo","nbits","bnBitLength","bnpDLShiftTo","bnpDRShiftTo","max","bnpLShiftTo","bs","cbs","bm","ds","bnpRShiftTo","bnpSubTo","min","bnpMultiplyTo","abs","y","bnpSquareTo","bnpDivRemTo","q","pm","pt","copyTo","ts","ms","nsh","lShiftTo","ys","y0","yt","d1","d2","e","dlShiftTo","compareTo","ONE","qd","drShiftTo","rShiftTo","bnMod","divRemTo","Classic","cConvert","mod","cRevert","cReduce","cMulTo","multiplyTo","reduce","cSqrTo","squareTo","convert","revert","mulTo","sqrTo","bnpInvDigit","Montgomery","mp","invDigit","mpl","mph","um","mt2","montConvert","montRevert","montReduce","u0","montSqrTo","montMulTo","bnpIsEven","bnpExp","z","r2","g","bnModPowInt","isEven","exp","bitLength","modPowInt","bnClone","bnIntValue","bnByteValue","bnShortValue","bnpChunkSize","LN2","log","bnSigNum","bnpToRadix","signum","cs","chunkSize","intValue","substr","bnpFromRadix","dMultiply","dAddOffset","bnpFromNumber","testBit","bitwiseTo","shiftLeft","op_or","isProbablePrime","nextBytes","bnToByteArray","bnEquals","bnMin","bnMax","bnpBitwiseTo","op","f","op_and","bnAnd","bnOr","op_xor","bnXor","op_andnot","bnAndNot","bnNot","bnShiftLeft","bnShiftRight","lbit","bnGetLowestSetBit","cbit","bnBitCount","bnTestBit","bnpChangeBit","bnSetBit","changeBit","bnClearBit","bnFlipBit","bnpAddTo","bnAdd","addTo","bnSubtract","bnMultiply","bnSquare","bnDivide","bnRemainder","bnDivideAndRemainder","bnpDMultiply","bnpDAddOffset","NullExp","nNop","nMulTo","nSqrTo","bnPow","bnpMultiplyLowerTo","bnpMultiplyUpperTo","Barrett","q3","mu","divide","barrettConvert","barrettRevert","barrettReduce","multiplyUpperTo","multiplyLowerTo","barrettSqrTo","barrettMulTo","bnModPow","k1","g2","is1","bnGCD","clone","getLowestSetBit","bnpModInt","bnModInverse","ac","u","subtract","add","lowprimes","lplim","bnIsProbablePrime","modInt","millerRabin","bnpMillerRabin","n1","shiftRight","random","modPow","byteValue","shortValue","toByteArray","equals","and","or","xor","andNot","not","bitCount","setBit","clearBit","flipBit","multiply","remainder","divideAndRemainder","modInverse","gcd","square","rng_state","rng_pool","rng_pptr","rng_seed_int","rng_psize","rng_seed_time","Date","getTime","window","crypto","getRandomValues","ua","Uint8Array","appVersion","rng_get_byte","prng_newstate","init","next","rng_get_bytes","ba","SecureRandom","Arcfour","S","ARC4init","key","ARC4next","exports","module","default","jsbn","call"],"mappings":"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","sourcesContent":["(function(){\n\n    // Copyright (c) 2005  Tom Wu\n    // All Rights Reserved.\n    // See \"LICENSE\" for details.\n\n    // Basic JavaScript BN library - subset useful for RSA encryption.\n\n    // Bits per digit\n    var dbits;\n\n    // JavaScript engine analysis\n    var canary = 0xdeadbeefcafe;\n    var j_lm = ((canary&0xffffff)==0xefcafe);\n\n    // (public) Constructor\n    function BigInteger(a,b,c) {\n      if(a != null)\n        if(\"number\" == typeof a) this.fromNumber(a,b,c);\n        else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n        else this.fromString(a,b);\n    }\n\n    // return new, unset BigInteger\n    function nbi() { return new BigInteger(null); }\n\n    // am: Compute w_j += (x*this_i), propagate carries,\n    // c is initial carry, returns final carry.\n    // c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n    // We need to select the fastest one that works in this environment.\n\n    // am1: use a single mult and divide to get the high bits,\n    // max digit bits should be 26 because\n    // max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n    function am1(i,x,w,j,c,n) {\n      while(--n >= 0) {\n        var v = x*this[i++]+w[j]+c;\n        c = Math.floor(v/0x4000000);\n        w[j++] = v&0x3ffffff;\n      }\n      return c;\n    }\n    // am2 avoids a big mult-and-extract completely.\n    // Max digit bits should be <= 30 because we do bitwise ops\n    // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n    function am2(i,x,w,j,c,n) {\n      var xl = x&0x7fff, xh = x>>15;\n      while(--n >= 0) {\n        var l = this[i]&0x7fff;\n        var h = this[i++]>>15;\n        var m = xh*l+h*xl;\n        l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);\n        c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n        w[j++] = l&0x3fffffff;\n      }\n      return c;\n    }\n    // Alternately, set max digit bits to 28 since some\n    // browsers slow down when dealing with 32-bit numbers.\n    function am3(i,x,w,j,c,n) {\n      var xl = x&0x3fff, xh = x>>14;\n      while(--n >= 0) {\n        var l = this[i]&0x3fff;\n        var h = this[i++]>>14;\n        var m = xh*l+h*xl;\n        l = xl*l+((m&0x3fff)<<14)+w[j]+c;\n        c = (l>>28)+(m>>14)+xh*h;\n        w[j++] = l&0xfffffff;\n      }\n      return c;\n    }\n    var inBrowser = typeof navigator !== \"undefined\";\n    if(inBrowser && j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n      BigInteger.prototype.am = am2;\n      dbits = 30;\n    }\n    else if(inBrowser && j_lm && (navigator.appName != \"Netscape\")) {\n      BigInteger.prototype.am = am1;\n      dbits = 26;\n    }\n    else { // Mozilla/Netscape seems to prefer am3\n      BigInteger.prototype.am = am3;\n      dbits = 28;\n    }\n\n    BigInteger.prototype.DB = dbits;\n    BigInteger.prototype.DM = ((1<<dbits)-1);\n    BigInteger.prototype.DV = (1<<dbits);\n\n    var BI_FP = 52;\n    BigInteger.prototype.FV = Math.pow(2,BI_FP);\n    BigInteger.prototype.F1 = BI_FP-dbits;\n    BigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n    // Digit conversions\n    var BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    var BI_RC = new Array();\n    var rr,vv;\n    rr = \"0\".charCodeAt(0);\n    for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\n    rr = \"a\".charCodeAt(0);\n    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n    rr = \"A\".charCodeAt(0);\n    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\n    function int2char(n) { return BI_RM.charAt(n); }\n    function intAt(s,i) {\n      var c = BI_RC[s.charCodeAt(i)];\n      return (c==null)?-1:c;\n    }\n\n    // (protected) copy this to r\n    function bnpCopyTo(r) {\n      for(var i = this.t-1; i >= 0; --i) r[i] = this[i];\n      r.t = this.t;\n      r.s = this.s;\n    }\n\n    // (protected) set from integer value x, -DV <= x < DV\n    function bnpFromInt(x) {\n      this.t = 1;\n      this.s = (x<0)?-1:0;\n      if(x > 0) this[0] = x;\n      else if(x < -1) this[0] = x+this.DV;\n      else this.t = 0;\n    }\n\n    // return bigint initialized to value\n    function nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n    // (protected) set from string and radix\n    function bnpFromString(s,b) {\n      var k;\n      if(b == 16) k = 4;\n      else if(b == 8) k = 3;\n      else if(b == 256) k = 8; // byte array\n      else if(b == 2) k = 1;\n      else if(b == 32) k = 5;\n      else if(b == 4) k = 2;\n      else { this.fromRadix(s,b); return; }\n      this.t = 0;\n      this.s = 0;\n      var i = s.length, mi = false, sh = 0;\n      while(--i >= 0) {\n        var x = (k==8)?s[i]&0xff:intAt(s,i);\n        if(x < 0) {\n          if(s.charAt(i) == \"-\") mi = true;\n          continue;\n        }\n        mi = false;\n        if(sh == 0)\n          this[this.t++] = x;\n        else if(sh+k > this.DB) {\n          this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n          this[this.t++] = (x>>(this.DB-sh));\n        }\n        else\n          this[this.t-1] |= x<<sh;\n        sh += k;\n        if(sh >= this.DB) sh -= this.DB;\n      }\n      if(k == 8 && (s[0]&0x80) != 0) {\n        this.s = -1;\n        if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n      }\n      this.clamp();\n      if(mi) BigInteger.ZERO.subTo(this,this);\n    }\n\n    // (protected) clamp off excess high words\n    function bnpClamp() {\n      var c = this.s&this.DM;\n      while(this.t > 0 && this[this.t-1] == c) --this.t;\n    }\n\n    // (public) return string representation in given radix\n    function bnToString(b) {\n      if(this.s < 0) return \"-\"+this.negate().toString(b);\n      var k;\n      if(b == 16) k = 4;\n      else if(b == 8) k = 3;\n      else if(b == 2) k = 1;\n      else if(b == 32) k = 5;\n      else if(b == 4) k = 2;\n      else return this.toRadix(b);\n      var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n      var p = this.DB-(i*this.DB)%k;\n      if(i-- > 0) {\n        if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }\n        while(i >= 0) {\n          if(p < k) {\n            d = (this[i]&((1<<p)-1))<<(k-p);\n            d |= this[--i]>>(p+=this.DB-k);\n          }\n          else {\n            d = (this[i]>>(p-=k))&km;\n            if(p <= 0) { p += this.DB; --i; }\n          }\n          if(d > 0) m = true;\n          if(m) r += int2char(d);\n        }\n      }\n      return m?r:\"0\";\n    }\n\n    // (public) -this\n    function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n    // (public) |this|\n    function bnAbs() { return (this.s<0)?this.negate():this; }\n\n    // (public) return + if this > a, - if this < a, 0 if equal\n    function bnCompareTo(a) {\n      var r = this.s-a.s;\n      if(r != 0) return r;\n      var i = this.t;\n      r = i-a.t;\n      if(r != 0) return (this.s<0)?-r:r;\n      while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;\n      return 0;\n    }\n\n    // returns bit length of the integer x\n    function nbits(x) {\n      var r = 1, t;\n      if((t=x>>>16) != 0) { x = t; r += 16; }\n      if((t=x>>8) != 0) { x = t; r += 8; }\n      if((t=x>>4) != 0) { x = t; r += 4; }\n      if((t=x>>2) != 0) { x = t; r += 2; }\n      if((t=x>>1) != 0) { x = t; r += 1; }\n      return r;\n    }\n\n    // (public) return the number of bits in \"this\"\n    function bnBitLength() {\n      if(this.t <= 0) return 0;\n      return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));\n    }\n\n    // (protected) r = this << n*DB\n    function bnpDLShiftTo(n,r) {\n      var i;\n      for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];\n      for(i = n-1; i >= 0; --i) r[i] = 0;\n      r.t = this.t+n;\n      r.s = this.s;\n    }\n\n    // (protected) r = this >> n*DB\n    function bnpDRShiftTo(n,r) {\n      for(var i = n; i < this.t; ++i) r[i-n] = this[i];\n      r.t = Math.max(this.t-n,0);\n      r.s = this.s;\n    }\n\n    // (protected) r = this << n\n    function bnpLShiftTo(n,r) {\n      var bs = n%this.DB;\n      var cbs = this.DB-bs;\n      var bm = (1<<cbs)-1;\n      var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n      for(i = this.t-1; i >= 0; --i) {\n        r[i+ds+1] = (this[i]>>cbs)|c;\n        c = (this[i]&bm)<<bs;\n      }\n      for(i = ds-1; i >= 0; --i) r[i] = 0;\n      r[ds] = c;\n      r.t = this.t+ds+1;\n      r.s = this.s;\n      r.clamp();\n    }\n\n    // (protected) r = this >> n\n    function bnpRShiftTo(n,r) {\n      r.s = this.s;\n      var ds = Math.floor(n/this.DB);\n      if(ds >= this.t) { r.t = 0; return; }\n      var bs = n%this.DB;\n      var cbs = this.DB-bs;\n      var bm = (1<<bs)-1;\n      r[0] = this[ds]>>bs;\n      for(var i = ds+1; i < this.t; ++i) {\n        r[i-ds-1] |= (this[i]&bm)<<cbs;\n        r[i-ds] = this[i]>>bs;\n      }\n      if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;\n      r.t = this.t-ds;\n      r.clamp();\n    }\n\n    // (protected) r = this - a\n    function bnpSubTo(a,r) {\n      var i = 0, c = 0, m = Math.min(a.t,this.t);\n      while(i < m) {\n        c += this[i]-a[i];\n        r[i++] = c&this.DM;\n        c >>= this.DB;\n      }\n      if(a.t < this.t) {\n        c -= a.s;\n        while(i < this.t) {\n          c += this[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += this.s;\n      }\n      else {\n        c += this.s;\n        while(i < a.t) {\n          c -= a[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c -= a.s;\n      }\n      r.s = (c<0)?-1:0;\n      if(c < -1) r[i++] = this.DV+c;\n      else if(c > 0) r[i++] = c;\n      r.t = i;\n      r.clamp();\n    }\n\n    // (protected) r = this * a, r != this,a (HAC 14.12)\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyTo(a,r) {\n      var x = this.abs(), y = a.abs();\n      var i = x.t;\n      r.t = i+y.t;\n      while(--i >= 0) r[i] = 0;\n      for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);\n      r.s = 0;\n      r.clamp();\n      if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n    }\n\n    // (protected) r = this^2, r != this (HAC 14.16)\n    function bnpSquareTo(r) {\n      var x = this.abs();\n      var i = r.t = 2*x.t;\n      while(--i >= 0) r[i] = 0;\n      for(i = 0; i < x.t-1; ++i) {\n        var c = x.am(i,x[i],r,2*i,0,1);\n        if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n          r[i+x.t] -= x.DV;\n          r[i+x.t+1] = 1;\n        }\n      }\n      if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);\n      r.s = 0;\n      r.clamp();\n    }\n\n    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n    // r != q, this != m.  q or r may be null.\n    function bnpDivRemTo(m,q,r) {\n      var pm = m.abs();\n      if(pm.t <= 0) return;\n      var pt = this.abs();\n      if(pt.t < pm.t) {\n        if(q != null) q.fromInt(0);\n        if(r != null) this.copyTo(r);\n        return;\n      }\n      if(r == null) r = nbi();\n      var y = nbi(), ts = this.s, ms = m.s;\n      var nsh = this.DB-nbits(pm[pm.t-1]);   // normalize modulus\n      if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }\n      else { pm.copyTo(y); pt.copyTo(r); }\n      var ys = y.t;\n      var y0 = y[ys-1];\n      if(y0 == 0) return;\n      var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);\n      var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n      var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n      y.dlShiftTo(j,t);\n      if(r.compareTo(t) >= 0) {\n        r[r.t++] = 1;\n        r.subTo(t,r);\n      }\n      BigInteger.ONE.dlShiftTo(ys,t);\n      t.subTo(y,y);  // \"negative\" y so we can replace sub with am later\n      while(y.t < ys) y[y.t++] = 0;\n      while(--j >= 0) {\n        // Estimate quotient digit\n        var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);\n        if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {   // Try it out\n          y.dlShiftTo(j,t);\n          r.subTo(t,r);\n          while(r[i] < --qd) r.subTo(t,r);\n        }\n      }\n      if(q != null) {\n        r.drShiftTo(ys,q);\n        if(ts != ms) BigInteger.ZERO.subTo(q,q);\n      }\n      r.t = ys;\n      r.clamp();\n      if(nsh > 0) r.rShiftTo(nsh,r); // Denormalize remainder\n      if(ts < 0) BigInteger.ZERO.subTo(r,r);\n    }\n\n    // (public) this mod a\n    function bnMod(a) {\n      var r = nbi();\n      this.abs().divRemTo(a,null,r);\n      if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n      return r;\n    }\n\n    // Modular reduction using \"classic\" algorithm\n    function Classic(m) { this.m = m; }\n    function cConvert(x) {\n      if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n      else return x;\n    }\n    function cRevert(x) { return x; }\n    function cReduce(x) { x.divRemTo(this.m,null,x); }\n    function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n    function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    Classic.prototype.convert = cConvert;\n    Classic.prototype.revert = cRevert;\n    Classic.prototype.reduce = cReduce;\n    Classic.prototype.mulTo = cMulTo;\n    Classic.prototype.sqrTo = cSqrTo;\n\n    // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n    // justification:\n    //         xy == 1 (mod m)\n    //         xy =  1+km\n    //   xy(2-xy) = (1+km)(1-km)\n    // x[y(2-xy)] = 1-k^2m^2\n    // x[y(2-xy)] == 1 (mod m^2)\n    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n    // JS multiply \"overflows\" differently from C/C++, so care is needed here.\n    function bnpInvDigit() {\n      if(this.t < 1) return 0;\n      var x = this[0];\n      if((x&1) == 0) return 0;\n      var y = x&3;       // y == 1/x mod 2^2\n      y = (y*(2-(x&0xf)*y))&0xf; // y == 1/x mod 2^4\n      y = (y*(2-(x&0xff)*y))&0xff;   // y == 1/x mod 2^8\n      y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;    // y == 1/x mod 2^16\n      // last step - calculate inverse mod DV directly;\n      // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n      y = (y*(2-x*y%this.DV))%this.DV;       // y == 1/x mod 2^dbits\n      // we really want the negative inverse, and -DV < y < DV\n      return (y>0)?this.DV-y:-y;\n    }\n\n    // Montgomery reduction\n    function Montgomery(m) {\n      this.m = m;\n      this.mp = m.invDigit();\n      this.mpl = this.mp&0x7fff;\n      this.mph = this.mp>>15;\n      this.um = (1<<(m.DB-15))-1;\n      this.mt2 = 2*m.t;\n    }\n\n    // xR mod m\n    function montConvert(x) {\n      var r = nbi();\n      x.abs().dlShiftTo(this.m.t,r);\n      r.divRemTo(this.m,null,r);\n      if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n      return r;\n    }\n\n    // x/R mod m\n    function montRevert(x) {\n      var r = nbi();\n      x.copyTo(r);\n      this.reduce(r);\n      return r;\n    }\n\n    // x = x/R mod m (HAC 14.32)\n    function montReduce(x) {\n      while(x.t <= this.mt2) // pad x so am has enough room later\n        x[x.t++] = 0;\n      for(var i = 0; i < this.m.t; ++i) {\n        // faster way of calculating u0 = x[i]*mp mod DV\n        var j = x[i]&0x7fff;\n        var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n        // use am to combine the multiply-shift-add into one call\n        j = i+this.m.t;\n        x[j] += this.m.am(0,u0,x,i,0,this.m.t);\n        // propagate carry\n        while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }\n      }\n      x.clamp();\n      x.drShiftTo(this.m.t,x);\n      if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n    }\n\n    // r = \"x^2/R mod m\"; x != r\n    function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    // r = \"xy/R mod m\"; x,y != r\n    function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\n    Montgomery.prototype.convert = montConvert;\n    Montgomery.prototype.revert = montRevert;\n    Montgomery.prototype.reduce = montReduce;\n    Montgomery.prototype.mulTo = montMulTo;\n    Montgomery.prototype.sqrTo = montSqrTo;\n\n    // (protected) true iff this is even\n    function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }\n\n    // (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\n    function bnpExp(e,z) {\n      if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n      var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n      g.copyTo(r);\n      while(--i >= 0) {\n        z.sqrTo(r,r2);\n        if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n        else { var t = r; r = r2; r2 = t; }\n      }\n      return z.revert(r);\n    }\n\n    // (public) this^e % m, 0 <= e < 2^32\n    function bnModPowInt(e,m) {\n      var z;\n      if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n      return this.exp(e,z);\n    }\n\n    // protected\n    BigInteger.prototype.copyTo = bnpCopyTo;\n    BigInteger.prototype.fromInt = bnpFromInt;\n    BigInteger.prototype.fromString = bnpFromString;\n    BigInteger.prototype.clamp = bnpClamp;\n    BigInteger.prototype.dlShiftTo = bnpDLShiftTo;\n    BigInteger.prototype.drShiftTo = bnpDRShiftTo;\n    BigInteger.prototype.lShiftTo = bnpLShiftTo;\n    BigInteger.prototype.rShiftTo = bnpRShiftTo;\n    BigInteger.prototype.subTo = bnpSubTo;\n    BigInteger.prototype.multiplyTo = bnpMultiplyTo;\n    BigInteger.prototype.squareTo = bnpSquareTo;\n    BigInteger.prototype.divRemTo = bnpDivRemTo;\n    BigInteger.prototype.invDigit = bnpInvDigit;\n    BigInteger.prototype.isEven = bnpIsEven;\n    BigInteger.prototype.exp = bnpExp;\n\n    // public\n    BigInteger.prototype.toString = bnToString;\n    BigInteger.prototype.negate = bnNegate;\n    BigInteger.prototype.abs = bnAbs;\n    BigInteger.prototype.compareTo = bnCompareTo;\n    BigInteger.prototype.bitLength = bnBitLength;\n    BigInteger.prototype.mod = bnMod;\n    BigInteger.prototype.modPowInt = bnModPowInt;\n\n    // \"constants\"\n    BigInteger.ZERO = nbv(0);\n    BigInteger.ONE = nbv(1);\n\n    // Copyright (c) 2005-2009  Tom Wu\n    // All Rights Reserved.\n    // See \"LICENSE\" for details.\n\n    // Extended JavaScript BN functions, required for RSA private ops.\n\n    // Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n    // Version 1.2: square() API, isProbablePrime fix\n\n    // (public)\n    function bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n    // (public) return value as integer\n    function bnIntValue() {\n      if(this.s < 0) {\n        if(this.t == 1) return this[0]-this.DV;\n        else if(this.t == 0) return -1;\n      }\n      else if(this.t == 1) return this[0];\n      else if(this.t == 0) return 0;\n      // assumes 16 < DB < 32\n      return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];\n    }\n\n    // (public) return value as byte\n    function bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }\n\n    // (public) return value as short (assumes DB>=16)\n    function bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }\n\n    // (protected) return x s.t. r^x < DV\n    function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n    // (public) 0 if this == 0, 1 if this > 0\n    function bnSigNum() {\n      if(this.s < 0) return -1;\n      else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n      else return 1;\n    }\n\n    // (protected) convert to radix string\n    function bnpToRadix(b) {\n      if(b == null) b = 10;\n      if(this.signum() == 0 || b < 2 || b > 36) return \"0\";\n      var cs = this.chunkSize(b);\n      var a = Math.pow(b,cs);\n      var d = nbv(a), y = nbi(), z = nbi(), r = \"\";\n      this.divRemTo(d,y,z);\n      while(y.signum() > 0) {\n        r = (a+z.intValue()).toString(b).substr(1) + r;\n        y.divRemTo(d,y,z);\n      }\n      return z.intValue().toString(b) + r;\n    }\n\n    // (protected) convert from radix string\n    function bnpFromRadix(s,b) {\n      this.fromInt(0);\n      if(b == null) b = 10;\n      var cs = this.chunkSize(b);\n      var d = Math.pow(b,cs), mi = false, j = 0, w = 0;\n      for(var i = 0; i < s.length; ++i) {\n        var x = intAt(s,i);\n        if(x < 0) {\n          if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n          continue;\n        }\n        w = b*w+x;\n        if(++j >= cs) {\n          this.dMultiply(d);\n          this.dAddOffset(w,0);\n          j = 0;\n          w = 0;\n        }\n      }\n      if(j > 0) {\n        this.dMultiply(Math.pow(b,j));\n        this.dAddOffset(w,0);\n      }\n      if(mi) BigInteger.ZERO.subTo(this,this);\n    }\n\n    // (protected) alternate constructor\n    function bnpFromNumber(a,b,c) {\n      if(\"number\" == typeof b) {\n        // new BigInteger(int,int,RNG)\n        if(a < 2) this.fromInt(1);\n        else {\n          this.fromNumber(a,c);\n          if(!this.testBit(a-1))    // force MSB set\n            this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n          if(this.isEven()) this.dAddOffset(1,0); // force odd\n          while(!this.isProbablePrime(b)) {\n            this.dAddOffset(2,0);\n            if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n          }\n        }\n      }\n      else {\n        // new BigInteger(int,RNG)\n        var x = new Array(), t = a&7;\n        x.length = (a>>3)+1;\n        b.nextBytes(x);\n        if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n        this.fromString(x,256);\n      }\n    }\n\n    // (public) convert to bigendian byte array\n    function bnToByteArray() {\n      var i = this.t, r = new Array();\n      r[0] = this.s;\n      var p = this.DB-(i*this.DB)%8, d, k = 0;\n      if(i-- > 0) {\n        if(p < this.DB && (d = this[i]>>p) != (this.s&this.DM)>>p)\n          r[k++] = d|(this.s<<(this.DB-p));\n        while(i >= 0) {\n          if(p < 8) {\n            d = (this[i]&((1<<p)-1))<<(8-p);\n            d |= this[--i]>>(p+=this.DB-8);\n          }\n          else {\n            d = (this[i]>>(p-=8))&0xff;\n            if(p <= 0) { p += this.DB; --i; }\n          }\n          if((d&0x80) != 0) d |= -256;\n          if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n          if(k > 0 || d != this.s) r[k++] = d;\n        }\n      }\n      return r;\n    }\n\n    function bnEquals(a) { return(this.compareTo(a)==0); }\n    function bnMin(a) { return(this.compareTo(a)<0)?this:a; }\n    function bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n    // (protected) r = this op a (bitwise)\n    function bnpBitwiseTo(a,op,r) {\n      var i, f, m = Math.min(a.t,this.t);\n      for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);\n      if(a.t < this.t) {\n        f = a.s&this.DM;\n        for(i = m; i < this.t; ++i) r[i] = op(this[i],f);\n        r.t = this.t;\n      }\n      else {\n        f = this.s&this.DM;\n        for(i = m; i < a.t; ++i) r[i] = op(f,a[i]);\n        r.t = a.t;\n      }\n      r.s = op(this.s,a.s);\n      r.clamp();\n    }\n\n    // (public) this & a\n    function op_and(x,y) { return x&y; }\n    function bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n    // (public) this | a\n    function op_or(x,y) { return x|y; }\n    function bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n    // (public) this ^ a\n    function op_xor(x,y) { return x^y; }\n    function bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n    // (public) this & ~a\n    function op_andnot(x,y) { return x&~y; }\n    function bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n    // (public) ~this\n    function bnNot() {\n      var r = nbi();\n      for(var i = 0; i < this.t; ++i) r[i] = this.DM&~this[i];\n      r.t = this.t;\n      r.s = ~this.s;\n      return r;\n    }\n\n    // (public) this << n\n    function bnShiftLeft(n) {\n      var r = nbi();\n      if(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\n      return r;\n    }\n\n    // (public) this >> n\n    function bnShiftRight(n) {\n      var r = nbi();\n      if(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\n      return r;\n    }\n\n    // return index of lowest 1-bit in x, x < 2^31\n    function lbit(x) {\n      if(x == 0) return -1;\n      var r = 0;\n      if((x&0xffff) == 0) { x >>= 16; r += 16; }\n      if((x&0xff) == 0) { x >>= 8; r += 8; }\n      if((x&0xf) == 0) { x >>= 4; r += 4; }\n      if((x&3) == 0) { x >>= 2; r += 2; }\n      if((x&1) == 0) ++r;\n      return r;\n    }\n\n    // (public) returns index of lowest 1-bit (or -1 if none)\n    function bnGetLowestSetBit() {\n      for(var i = 0; i < this.t; ++i)\n        if(this[i] != 0) return i*this.DB+lbit(this[i]);\n      if(this.s < 0) return this.t*this.DB;\n      return -1;\n    }\n\n    // return number of 1 bits in x\n    function cbit(x) {\n      var r = 0;\n      while(x != 0) { x &= x-1; ++r; }\n      return r;\n    }\n\n    // (public) return number of set bits\n    function bnBitCount() {\n      var r = 0, x = this.s&this.DM;\n      for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);\n      return r;\n    }\n\n    // (public) true iff nth bit is set\n    function bnTestBit(n) {\n      var j = Math.floor(n/this.DB);\n      if(j >= this.t) return(this.s!=0);\n      return((this[j]&(1<<(n%this.DB)))!=0);\n    }\n\n    // (protected) this op (1<<n)\n    function bnpChangeBit(n,op) {\n      var r = BigInteger.ONE.shiftLeft(n);\n      this.bitwiseTo(r,op,r);\n      return r;\n    }\n\n    // (public) this | (1<<n)\n    function bnSetBit(n) { return this.changeBit(n,op_or); }\n\n    // (public) this & ~(1<<n)\n    function bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n    // (public) this ^ (1<<n)\n    function bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n    // (protected) r = this + a\n    function bnpAddTo(a,r) {\n      var i = 0, c = 0, m = Math.min(a.t,this.t);\n      while(i < m) {\n        c += this[i]+a[i];\n        r[i++] = c&this.DM;\n        c >>= this.DB;\n      }\n      if(a.t < this.t) {\n        c += a.s;\n        while(i < this.t) {\n          c += this[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += this.s;\n      }\n      else {\n        c += this.s;\n        while(i < a.t) {\n          c += a[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += a.s;\n      }\n      r.s = (c<0)?-1:0;\n      if(c > 0) r[i++] = c;\n      else if(c < -1) r[i++] = this.DV+c;\n      r.t = i;\n      r.clamp();\n    }\n\n    // (public) this + a\n    function bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n    // (public) this - a\n    function bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n    // (public) this * a\n    function bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n    // (public) this^2\n    function bnSquare() { var r = nbi(); this.squareTo(r); return r; }\n\n    // (public) this / a\n    function bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n    // (public) this % a\n    function bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n    // (public) [this/a,this%a]\n    function bnDivideAndRemainder(a) {\n      var q = nbi(), r = nbi();\n      this.divRemTo(a,q,r);\n      return new Array(q,r);\n    }\n\n    // (protected) this *= n, this >= 0, 1 < n < DV\n    function bnpDMultiply(n) {\n      this[this.t] = this.am(0,n-1,this,0,0,this.t);\n      ++this.t;\n      this.clamp();\n    }\n\n    // (protected) this += n << w words, this >= 0\n    function bnpDAddOffset(n,w) {\n      if(n == 0) return;\n      while(this.t <= w) this[this.t++] = 0;\n      this[w] += n;\n      while(this[w] >= this.DV) {\n        this[w] -= this.DV;\n        if(++w >= this.t) this[this.t++] = 0;\n        ++this[w];\n      }\n    }\n\n    // A \"null\" reducer\n    function NullExp() {}\n    function nNop(x) { return x; }\n    function nMulTo(x,y,r) { x.multiplyTo(y,r); }\n    function nSqrTo(x,r) { x.squareTo(r); }\n\n    NullExp.prototype.convert = nNop;\n    NullExp.prototype.revert = nNop;\n    NullExp.prototype.mulTo = nMulTo;\n    NullExp.prototype.sqrTo = nSqrTo;\n\n    // (public) this^e\n    function bnPow(e) { return this.exp(e,new NullExp()); }\n\n    // (protected) r = lower n words of \"this * a\", a.t <= n\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyLowerTo(a,n,r) {\n      var i = Math.min(this.t+a.t,n);\n      r.s = 0; // assumes a,this >= 0\n      r.t = i;\n      while(i > 0) r[--i] = 0;\n      var j;\n      for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);\n      for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);\n      r.clamp();\n    }\n\n    // (protected) r = \"this * a\" without lower n words, n > 0\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyUpperTo(a,n,r) {\n      --n;\n      var i = r.t = this.t+a.t-n;\n      r.s = 0; // assumes a,this >= 0\n      while(--i >= 0) r[i] = 0;\n      for(i = Math.max(n-this.t,0); i < a.t; ++i)\n        r[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);\n      r.clamp();\n      r.drShiftTo(1,r);\n    }\n\n    // Barrett modular reduction\n    function Barrett(m) {\n      // setup Barrett\n      this.r2 = nbi();\n      this.q3 = nbi();\n      BigInteger.ONE.dlShiftTo(2*m.t,this.r2);\n      this.mu = this.r2.divide(m);\n      this.m = m;\n    }\n\n    function barrettConvert(x) {\n      if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\n      else if(x.compareTo(this.m) < 0) return x;\n      else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n    }\n\n    function barrettRevert(x) { return x; }\n\n    // x = x mod m (HAC 14.42)\n    function barrettReduce(x) {\n      x.drShiftTo(this.m.t-1,this.r2);\n      if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\n      this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\n      this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\n      while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\n      x.subTo(this.r2,x);\n      while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n    }\n\n    // r = x^2 mod m; x != r\n    function barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    // r = x*y mod m; x,y != r\n    function barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\n    Barrett.prototype.convert = barrettConvert;\n    Barrett.prototype.revert = barrettRevert;\n    Barrett.prototype.reduce = barrettReduce;\n    Barrett.prototype.mulTo = barrettMulTo;\n    Barrett.prototype.sqrTo = barrettSqrTo;\n\n    // (public) this^e % m (HAC 14.85)\n    function bnModPow(e,m) {\n      var i = e.bitLength(), k, r = nbv(1), z;\n      if(i <= 0) return r;\n      else if(i < 18) k = 1;\n      else if(i < 48) k = 3;\n      else if(i < 144) k = 4;\n      else if(i < 768) k = 5;\n      else k = 6;\n      if(i < 8)\n        z = new Classic(m);\n      else if(m.isEven())\n        z = new Barrett(m);\n      else\n        z = new Montgomery(m);\n\n      // precomputation\n      var g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\n      g[1] = z.convert(this);\n      if(k > 1) {\n        var g2 = nbi();\n        z.sqrTo(g[1],g2);\n        while(n <= km) {\n          g[n] = nbi();\n          z.mulTo(g2,g[n-2],g[n]);\n          n += 2;\n        }\n      }\n\n      var j = e.t-1, w, is1 = true, r2 = nbi(), t;\n      i = nbits(e[j])-1;\n      while(j >= 0) {\n        if(i >= k1) w = (e[j]>>(i-k1))&km;\n        else {\n          w = (e[j]&((1<<(i+1))-1))<<(k1-i);\n          if(j > 0) w |= e[j-1]>>(this.DB+i-k1);\n        }\n\n        n = k;\n        while((w&1) == 0) { w >>= 1; --n; }\n        if((i -= n) < 0) { i += this.DB; --j; }\n        if(is1) {    // ret == 1, don't bother squaring or multiplying it\n          g[w].copyTo(r);\n          is1 = false;\n        }\n        else {\n          while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n          if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n          z.mulTo(r2,g[w],r);\n        }\n\n        while(j >= 0 && (e[j]&(1<<i)) == 0) {\n          z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n          if(--i < 0) { i = this.DB-1; --j; }\n        }\n      }\n      return z.revert(r);\n    }\n\n    // (public) gcd(this,a) (HAC 14.54)\n    function bnGCD(a) {\n      var x = (this.s<0)?this.negate():this.clone();\n      var y = (a.s<0)?a.negate():a.clone();\n      if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\n      var i = x.getLowestSetBit(), g = y.getLowestSetBit();\n      if(g < 0) return x;\n      if(i < g) g = i;\n      if(g > 0) {\n        x.rShiftTo(g,x);\n        y.rShiftTo(g,y);\n      }\n      while(x.signum() > 0) {\n        if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n        if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n        if(x.compareTo(y) >= 0) {\n          x.subTo(y,x);\n          x.rShiftTo(1,x);\n        }\n        else {\n          y.subTo(x,y);\n          y.rShiftTo(1,y);\n        }\n      }\n      if(g > 0) y.lShiftTo(g,y);\n      return y;\n    }\n\n    // (protected) this % n, n < 2^26\n    function bnpModInt(n) {\n      if(n <= 0) return 0;\n      var d = this.DV%n, r = (this.s<0)?n-1:0;\n      if(this.t > 0)\n        if(d == 0) r = this[0]%n;\n        else for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;\n      return r;\n    }\n\n    // (public) 1/this % m (HAC 14.61)\n    function bnModInverse(m) {\n      var ac = m.isEven();\n      if((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n      var u = m.clone(), v = this.clone();\n      var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\n      while(u.signum() != 0) {\n        while(u.isEven()) {\n          u.rShiftTo(1,u);\n          if(ac) {\n            if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n            a.rShiftTo(1,a);\n          }\n          else if(!b.isEven()) b.subTo(m,b);\n          b.rShiftTo(1,b);\n        }\n        while(v.isEven()) {\n          v.rShiftTo(1,v);\n          if(ac) {\n            if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n            c.rShiftTo(1,c);\n          }\n          else if(!d.isEven()) d.subTo(m,d);\n          d.rShiftTo(1,d);\n        }\n        if(u.compareTo(v) >= 0) {\n          u.subTo(v,u);\n          if(ac) a.subTo(c,a);\n          b.subTo(d,b);\n        }\n        else {\n          v.subTo(u,v);\n          if(ac) c.subTo(a,c);\n          d.subTo(b,d);\n        }\n      }\n      if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n      if(d.compareTo(m) >= 0) return d.subtract(m);\n      if(d.signum() < 0) d.addTo(m,d); else return d;\n      if(d.signum() < 0) return d.add(m); else return d;\n    }\n\n    var lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\n    var lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n    // (public) test primality with certainty >= 1-.5^t\n    function bnIsProbablePrime(t) {\n      var i, x = this.abs();\n      if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {\n        for(i = 0; i < lowprimes.length; ++i)\n          if(x[0] == lowprimes[i]) return true;\n        return false;\n      }\n      if(x.isEven()) return false;\n      i = 1;\n      while(i < lowprimes.length) {\n        var m = lowprimes[i], j = i+1;\n        while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n        m = x.modInt(m);\n        while(i < j) if(m%lowprimes[i++] == 0) return false;\n      }\n      return x.millerRabin(t);\n    }\n\n    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)\n    function bnpMillerRabin(t) {\n      var n1 = this.subtract(BigInteger.ONE);\n      var k = n1.getLowestSetBit();\n      if(k <= 0) return false;\n      var r = n1.shiftRight(k);\n      t = (t+1)>>1;\n      if(t > lowprimes.length) t = lowprimes.length;\n      var a = nbi();\n      for(var i = 0; i < t; ++i) {\n        //Pick bases at random, instead of starting at 2\n        a.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);\n        var y = a.modPow(r,this);\n        if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n          var j = 1;\n          while(j++ < k && y.compareTo(n1) != 0) {\n            y = y.modPowInt(2,this);\n            if(y.compareTo(BigInteger.ONE) == 0) return false;\n          }\n          if(y.compareTo(n1) != 0) return false;\n        }\n      }\n      return true;\n    }\n\n    // protected\n    BigInteger.prototype.chunkSize = bnpChunkSize;\n    BigInteger.prototype.toRadix = bnpToRadix;\n    BigInteger.prototype.fromRadix = bnpFromRadix;\n    BigInteger.prototype.fromNumber = bnpFromNumber;\n    BigInteger.prototype.bitwiseTo = bnpBitwiseTo;\n    BigInteger.prototype.changeBit = bnpChangeBit;\n    BigInteger.prototype.addTo = bnpAddTo;\n    BigInteger.prototype.dMultiply = bnpDMultiply;\n    BigInteger.prototype.dAddOffset = bnpDAddOffset;\n    BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\n    BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\n    BigInteger.prototype.modInt = bnpModInt;\n    BigInteger.prototype.millerRabin = bnpMillerRabin;\n\n    // public\n    BigInteger.prototype.clone = bnClone;\n    BigInteger.prototype.intValue = bnIntValue;\n    BigInteger.prototype.byteValue = bnByteValue;\n    BigInteger.prototype.shortValue = bnShortValue;\n    BigInteger.prototype.signum = bnSigNum;\n    BigInteger.prototype.toByteArray = bnToByteArray;\n    BigInteger.prototype.equals = bnEquals;\n    BigInteger.prototype.min = bnMin;\n    BigInteger.prototype.max = bnMax;\n    BigInteger.prototype.and = bnAnd;\n    BigInteger.prototype.or = bnOr;\n    BigInteger.prototype.xor = bnXor;\n    BigInteger.prototype.andNot = bnAndNot;\n    BigInteger.prototype.not = bnNot;\n    BigInteger.prototype.shiftLeft = bnShiftLeft;\n    BigInteger.prototype.shiftRight = bnShiftRight;\n    BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\n    BigInteger.prototype.bitCount = bnBitCount;\n    BigInteger.prototype.testBit = bnTestBit;\n    BigInteger.prototype.setBit = bnSetBit;\n    BigInteger.prototype.clearBit = bnClearBit;\n    BigInteger.prototype.flipBit = bnFlipBit;\n    BigInteger.prototype.add = bnAdd;\n    BigInteger.prototype.subtract = bnSubtract;\n    BigInteger.prototype.multiply = bnMultiply;\n    BigInteger.prototype.divide = bnDivide;\n    BigInteger.prototype.remainder = bnRemainder;\n    BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\n    BigInteger.prototype.modPow = bnModPow;\n    BigInteger.prototype.modInverse = bnModInverse;\n    BigInteger.prototype.pow = bnPow;\n    BigInteger.prototype.gcd = bnGCD;\n    BigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n    // JSBN-specific extension\n    BigInteger.prototype.square = bnSquare;\n\n    // Expose the Barrett function\n    BigInteger.prototype.Barrett = Barrett\n\n    // BigInteger interfaces not implemented in jsbn:\n\n    // BigInteger(int signum, byte[] magnitude)\n    // double doubleValue()\n    // float floatValue()\n    // int hashCode()\n    // long longValue()\n    // static BigInteger valueOf(long val)\n\n    // Random number generator - requires a PRNG backend, e.g. prng4.js\n\n    // For best results, put code like\n    // <body onClick='rng_seed_time();' onKeyPress='rng_seed_time();'>\n    // in your main HTML document.\n\n    var rng_state;\n    var rng_pool;\n    var rng_pptr;\n\n    // Mix in a 32-bit integer into the pool\n    function rng_seed_int(x) {\n      rng_pool[rng_pptr++] ^= x & 255;\n      rng_pool[rng_pptr++] ^= (x >> 8) & 255;\n      rng_pool[rng_pptr++] ^= (x >> 16) & 255;\n      rng_pool[rng_pptr++] ^= (x >> 24) & 255;\n      if(rng_pptr >= rng_psize) rng_pptr -= rng_psize;\n    }\n\n    // Mix in the current time (w/milliseconds) into the pool\n    function rng_seed_time() {\n      rng_seed_int(new Date().getTime());\n    }\n\n    // Initialize the pool with junk if needed.\n    if(rng_pool == null) {\n      rng_pool = new Array();\n      rng_pptr = 0;\n      var t;\n      if(typeof window !== \"undefined\" && window.crypto) {\n        if (window.crypto.getRandomValues) {\n          // Use webcrypto if available\n          var ua = new Uint8Array(32);\n          window.crypto.getRandomValues(ua);\n          for(t = 0; t < 32; ++t)\n            rng_pool[rng_pptr++] = ua[t];\n        }\n        else if(navigator.appName == \"Netscape\" && navigator.appVersion < \"5\") {\n          // Extract entropy (256 bits) from NS4 RNG if available\n          var z = window.crypto.random(32);\n          for(t = 0; t < z.length; ++t)\n            rng_pool[rng_pptr++] = z.charCodeAt(t) & 255;\n        }\n      }\n      while(rng_pptr < rng_psize) {  // extract some randomness from Math.random()\n        t = Math.floor(65536 * Math.random());\n        rng_pool[rng_pptr++] = t >>> 8;\n        rng_pool[rng_pptr++] = t & 255;\n      }\n      rng_pptr = 0;\n      rng_seed_time();\n      //rng_seed_int(window.screenX);\n      //rng_seed_int(window.screenY);\n    }\n\n    function rng_get_byte() {\n      if(rng_state == null) {\n        rng_seed_time();\n        rng_state = prng_newstate();\n        rng_state.init(rng_pool);\n        for(rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)\n          rng_pool[rng_pptr] = 0;\n        rng_pptr = 0;\n        //rng_pool = null;\n      }\n      // TODO: allow reseeding after first request\n      return rng_state.next();\n    }\n\n    function rng_get_bytes(ba) {\n      var i;\n      for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();\n    }\n\n    function SecureRandom() {}\n\n    SecureRandom.prototype.nextBytes = rng_get_bytes;\n\n    // prng4.js - uses Arcfour as a PRNG\n\n    function Arcfour() {\n      this.i = 0;\n      this.j = 0;\n      this.S = new Array();\n    }\n\n    // Initialize arcfour context from key, an array of ints, each from [0..255]\n    function ARC4init(key) {\n      var i, j, t;\n      for(i = 0; i < 256; ++i)\n        this.S[i] = i;\n      j = 0;\n      for(i = 0; i < 256; ++i) {\n        j = (j + this.S[i] + key[i % key.length]) & 255;\n        t = this.S[i];\n        this.S[i] = this.S[j];\n        this.S[j] = t;\n      }\n      this.i = 0;\n      this.j = 0;\n    }\n\n    function ARC4next() {\n      var t;\n      this.i = (this.i + 1) & 255;\n      this.j = (this.j + this.S[this.i]) & 255;\n      t = this.S[this.i];\n      this.S[this.i] = this.S[this.j];\n      this.S[this.j] = t;\n      return this.S[(t + this.S[this.i]) & 255];\n    }\n\n    Arcfour.prototype.init = ARC4init;\n    Arcfour.prototype.next = ARC4next;\n\n    // Plug in your RNG constructor here\n    function prng_newstate() {\n      return new Arcfour();\n    }\n\n    // Pool size must be a multiple of 4 and greater than 32.\n    // An array of bytes the size of the pool will be passed to init()\n    var rng_psize = 256;\n\n    if (typeof exports !== 'undefined') {\n        exports = module.exports = {\n            default: BigInteger,\n            BigInteger: BigInteger,\n            SecureRandom: SecureRandom,\n        };\n    } else {\n        this.jsbn = {\n          BigInteger: BigInteger,\n          SecureRandom: SecureRandom\n        };\n    }\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}