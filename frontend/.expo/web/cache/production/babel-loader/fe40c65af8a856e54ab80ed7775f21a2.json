{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _telemetry=_interopRequireDefault(require(\"./telemetry\"));var _url2=_interopRequireDefault(require(\"url\"));var _base=_interopRequireDefault(require(\"base-64\"));function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var Client=function(){function Client(options){(0,_classCallCheck2.default)(this,Client);var baseUrl=options.baseUrl,_options$telemetry=options.telemetry,telemetry=_options$telemetry===void 0?{}:_options$telemetry,token=options.token;if(!baseUrl){throw new Error('Missing Auth0 domain');}var _telemetry$name=telemetry.name,name=_telemetry$name===void 0?_telemetry.default.name:_telemetry$name,_telemetry$version=telemetry.version,version=_telemetry$version===void 0?_telemetry.default.version:_telemetry$version;this.telemetry={name:name,version:version};if(name!==_telemetry.default.name){this.telemetry.env={};this.telemetry.env[_telemetry.default.name]=_telemetry.default.version;}var parsed=_url2.default.parse(baseUrl);this.baseUrl=parsed.protocol==='https:'||parsed.protocol==='http:'?baseUrl:\"https://\"+baseUrl;this.domain=parsed.hostname||baseUrl;if(token){this.bearer=\"Bearer \"+token;}}(0,_createClass2.default)(Client,[{key:\"post\",value:function post(path,body){return this.request('POST',this.url(path),body);}},{key:\"patch\",value:function patch(path,body){return this.request('PATCH',this.url(path),body);}},{key:\"get\",value:function get(path,query){return this.request('GET',this.url(path,query));}},{key:\"url\",value:function url(path,query){var includeTelemetry=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var endpoint=_url2.default.resolve(this.baseUrl,path);if(query&&query.length!==0||includeTelemetry){var parsed=_url2.default.parse(endpoint);parsed.query=query||{};if(includeTelemetry){parsed.query.auth0Client=this._encodedTelemetry();}endpoint=_url2.default.format(parsed);}return endpoint;}},{key:\"request\",value:function request(method,url,body){var options={method:method,headers:{Accept:'application/json','Content-Type':'application/json','Auth0-Client':this._encodedTelemetry()}};if(this.bearer){options.headers.Authorization=this.bearer;}if(body){options.body=JSON.stringify(body);}return fetch(url,options).then(function(response){var payload={status:response.status,ok:response.ok,headers:response.headers};return response.json().then(function(json){return _objectSpread(_objectSpread({},payload),{},{json:json});}).catch(function(){return response.text().then(function(text){return _objectSpread(_objectSpread({},payload),{},{text:text});}).catch(function(){return _objectSpread(_objectSpread({},payload),{},{text:response.statusText});});});});}},{key:\"_encodedTelemetry\",value:function _encodedTelemetry(){return _base.default.encode(JSON.stringify(this.telemetry));}}]);return Client;}();exports.default=Client;","map":{"version":3,"sources":["/Users/diannamcallister/Desktop/spotstitch/frontend/node_modules/react-native-auth0/src/networking/index.js"],"names":["Client","options","baseUrl","telemetry","token","Error","name","defaults","version","env","parsed","url","parse","protocol","domain","hostname","bearer","path","body","request","query","includeTelemetry","endpoint","resolve","length","auth0Client","_encodedTelemetry","format","method","headers","Accept","Authorization","JSON","stringify","fetch","then","response","payload","status","ok","json","catch","text","statusText","base64","encode"],"mappings":"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","sourcesContent":["import defaults from './telemetry';\nimport url from 'url';\nimport base64 from 'base-64';\n\nexport default class Client {\n  constructor(options) {\n    const { baseUrl, telemetry = {}, token } = options;\n    if (!baseUrl) {\n      throw new Error('Missing Auth0 domain');\n    }\n    const { name = defaults.name, version = defaults.version } = telemetry;\n    this.telemetry = { name, version };\n    if (name !== defaults.name) {\n      this.telemetry.env = {};\n      this.telemetry.env[defaults.name] = defaults.version;\n    }\n    const parsed = url.parse(baseUrl);\n    this.baseUrl =\n      parsed.protocol === 'https:' || parsed.protocol === 'http:'\n        ? baseUrl\n        : `https://${baseUrl}`;\n    this.domain = parsed.hostname || baseUrl;\n    if (token) {\n      this.bearer = `Bearer ${token}`;\n    }\n  }\n\n  post(path, body) {\n    return this.request('POST', this.url(path), body);\n  }\n\n  patch(path, body) {\n    return this.request('PATCH', this.url(path), body);\n  }\n\n  get(path, query) {\n    return this.request('GET', this.url(path, query));\n  }\n\n  url(path, query, includeTelemetry = false) {\n    let endpoint = url.resolve(this.baseUrl, path);\n    if ((query && query.length !== 0) || includeTelemetry) {\n      const parsed = url.parse(endpoint);\n      parsed.query = query || {};\n      if (includeTelemetry) {\n        parsed.query.auth0Client = this._encodedTelemetry();\n      }\n      endpoint = url.format(parsed);\n    }\n    return endpoint;\n  }\n\n  request(method, url, body) {\n    const options = {\n      method: method,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Auth0-Client': this._encodedTelemetry(),\n      },\n    };\n    if (this.bearer) {\n      options.headers.Authorization = this.bearer;\n    }\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n    return fetch(url, options).then(response => {\n      const payload = {\n        status: response.status,\n        ok: response.ok,\n        headers: response.headers,\n      };\n      return response\n        .json()\n        .then(json => {\n          return { ...payload, json };\n        })\n        .catch(() => {\n          return response\n            .text()\n            .then(text => {\n              return { ...payload, text };\n            })\n            .catch(() => {\n              return { ...payload, text: response.statusText };\n            });\n        });\n    });\n  }\n\n  _encodedTelemetry() {\n    return base64.encode(JSON.stringify(this.telemetry));\n  }\n}\n"]},"metadata":{},"sourceType":"script"}